# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import data_pb2 as data__pb2


class MessageChargeStub(object):
  """微信支付
  定义服务,用在rpc传输中
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetChargeInfo = channel.unary_unary(
        '/message_app.MessageCharge/GetChargeInfo',
        request_serializer=data__pb2.json.SerializeToString,
        response_deserializer=data__pb2.json.FromString,
        )


class MessageChargeServicer(object):
  """微信支付
  定义服务,用在rpc传输中
  """

  def GetChargeInfo(self, request, context):
    """获取充值套餐及可使用的支付方式
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MessageChargeServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetChargeInfo': grpc.unary_unary_rpc_method_handler(
          servicer.GetChargeInfo,
          request_deserializer=data__pb2.json.FromString,
          response_serializer=data__pb2.json.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'message_app.MessageCharge', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
