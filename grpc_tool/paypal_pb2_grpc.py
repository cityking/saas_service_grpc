# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import paypal_pb2 as paypal__pb2


class PaypalPayStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.PaymentCreate = channel.unary_unary(
        '/paypal.PaypalPay/PaymentCreate',
        request_serializer=paypal__pb2.PaymentCreateReq.SerializeToString,
        response_deserializer=paypal__pb2.PaymentCreateRsp.FromString,
        )
    self.PaymentExecute = channel.unary_unary(
        '/paypal.PaypalPay/PaymentExecute',
        request_serializer=paypal__pb2.PaymentExecuteReq.SerializeToString,
        response_deserializer=paypal__pb2.PaymentExecuteRsp.FromString,
        )


class PaypalPayServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def PaymentCreate(self, request, context):
    """创建支付
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def PaymentExecute(self, request, context):
    """支付执行
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_PaypalPayServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'PaymentCreate': grpc.unary_unary_rpc_method_handler(
          servicer.PaymentCreate,
          request_deserializer=paypal__pb2.PaymentCreateReq.FromString,
          response_serializer=paypal__pb2.PaymentCreateRsp.SerializeToString,
      ),
      'PaymentExecute': grpc.unary_unary_rpc_method_handler(
          servicer.PaymentExecute,
          request_deserializer=paypal__pb2.PaymentExecuteReq.FromString,
          response_serializer=paypal__pb2.PaymentExecuteRsp.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'paypal.PaypalPay', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
